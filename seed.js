#!/usr/bin/env node

const mongoose = require('mongoose');
require('dotenv').config();

const { createBasicData, clearAllData, resetData, showDataStats } = require('./utils/seedData');

// ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
const connectDB = async () => {
    try {
        await mongoose.connect(process.env.MONGO_URI);
        console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ');
    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
        process.exit(1);
    }
};

// ูุทุน ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
const disconnectDB = async () => {
    try {
        await mongoose.disconnect();
        console.log('๐ ุชู ูุทุน ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ูุทุน ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
    }
};

// ุฏุงูุฉ ุฑุฆูุณูุฉ
const main = async () => {
    try {
        await connectDB();

        const command = process.argv[2];

        switch (command) {
            case 'create':
                console.log('๐ ุชุดุบูู ุฃูุฑ ุฅูุดุงุก ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ...\n');
                await createBasicData();
                break;

            case 'clear':
                console.log('๐๏ธ ุชุดุบูู ุฃูุฑ ุญุฐู ุฌููุน ุงูุจูุงูุงุช...\n');
                await clearAllData();
                break;

            case 'reset':
                console.log('๐ ุชุดุบูู ุฃูุฑ ุฅุนุงุฏุฉ ุชุนููู ุงูุจูุงูุงุช...\n');
                await resetData();
                break;

            case 'stats':
                console.log('๐ ุนุฑุถ ุฅุญุตุงุฆูุงุช ุงูุจูุงูุงุช...\n');
                await showDataStats();
                break;

            default:
                console.log('๐ ุงูุฃูุงูุฑ ุงููุชุงุญุฉ:');
                console.log('  node seed.js create  - ุฅูุดุงุก ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ');
                console.log('  node seed.js clear   - ุญุฐู ุฌููุน ุงูุจูุงูุงุช');
                console.log('  node seed.js reset   - ุฅุนุงุฏุฉ ุชุนููู ุงูุจูุงูุงุช (ุญุฐู ุซู ุฅูุดุงุก)');
                console.log('  node seed.js stats   - ุนุฑุถ ุฅุญุตุงุฆูุงุช ุงูุจูุงูุงุช');
                break;
        }

    } catch (error) {
        console.error('๐ฅ ุฎุทุฃ ูู ุชุดุบูู ุงูุฃูุฑ:', error);
        process.exit(1);
    } finally {
        await disconnectDB();
        process.exit(0);
    }
};

// ุชุดุบูู ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main();
